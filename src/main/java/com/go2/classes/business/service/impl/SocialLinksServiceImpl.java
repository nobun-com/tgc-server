/*
 * Created on 26 Aug 2017 ( Time 13:07:43 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.go2.classes.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

import com.go2.classes.business.service.SocialLinksService;
import com.go2.classes.business.service.mapping.SocialLinksServiceMapper;
import com.go2.classes.data.repository.jpa.SocialLinksJpaRepository;
import com.go2.classes.models.SocialLinks;
import com.go2.classes.models.jpa.SocialLinksEntity;

/**
 * Implementation of SocialLinksService
 */
@Component
@Transactional
public class SocialLinksServiceImpl implements SocialLinksService {

	@Resource
	private SocialLinksJpaRepository socialLinksJpaRepository;

	@Resource
	private SocialLinksServiceMapper socialLinksServiceMapper;

	@Override
	public SocialLinks findById(Long id) {
		SocialLinksEntity socialLinksEntity = socialLinksJpaRepository.findOne(id);
		return socialLinksServiceMapper.mapSocialLinksEntityToSocialLinks(socialLinksEntity);
	}

	@Override
	public List<SocialLinks> findAll() {
		Iterable<SocialLinksEntity> entities = socialLinksJpaRepository.findAll();
		List<SocialLinks> beans = new ArrayList<SocialLinks>();
		for (SocialLinksEntity socialLinksEntity : entities) {
			beans.add(socialLinksServiceMapper.mapSocialLinksEntityToSocialLinks(socialLinksEntity));
		}
		return beans;
	}

	@Override
	public SocialLinks save(SocialLinks socialLinks) {
		return update(socialLinks);
	}

	@Override
	public SocialLinks create(SocialLinks socialLinks) {
		SocialLinksEntity socialLinksEntity = new SocialLinksEntity();
		socialLinksServiceMapper.mapSocialLinksToSocialLinksEntity(socialLinks, socialLinksEntity);
		SocialLinksEntity socialLinksEntitySaved = socialLinksJpaRepository.save(socialLinksEntity);
		return socialLinksServiceMapper.mapSocialLinksEntityToSocialLinks(socialLinksEntitySaved);
	}

	@Override
	public SocialLinks update(SocialLinks socialLinks) {
		SocialLinksEntity socialLinksEntity = socialLinksJpaRepository.findOne(socialLinks.getId());
		socialLinksServiceMapper.mapSocialLinksToSocialLinksEntity(socialLinks, socialLinksEntity);
		SocialLinksEntity socialLinksEntitySaved = socialLinksJpaRepository.save(socialLinksEntity);
		return socialLinksServiceMapper.mapSocialLinksEntityToSocialLinks(socialLinksEntitySaved);
	}

	@Override
	public void delete(Long id) {
		socialLinksJpaRepository.delete(id);
	}

	public SocialLinksJpaRepository getSocialLinksJpaRepository() {
		return socialLinksJpaRepository;
	}

	public void setSocialLinksJpaRepository(SocialLinksJpaRepository socialLinksJpaRepository) {
		this.socialLinksJpaRepository = socialLinksJpaRepository;
	}

	public SocialLinksServiceMapper getSocialLinksServiceMapper() {
		return socialLinksServiceMapper;
	}

	public void setSocialLinksServiceMapper(SocialLinksServiceMapper socialLinksServiceMapper) {
		this.socialLinksServiceMapper = socialLinksServiceMapper;
	}

}

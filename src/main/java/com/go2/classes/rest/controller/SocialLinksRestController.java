/*
 * Created on 26 Aug 2017 ( Time 13:08:14 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.go2.classes.rest.controller;

import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;

import com.go2.classes.business.service.SocialLinksService;
import com.go2.classes.models.SocialLinks;

/**
 * Spring MVC controller for 'SocialLinks' management.
 */
@Controller
public class SocialLinksRestController {

	@Resource
	private SocialLinksService socialLinksService;

	@RequestMapping(value = "/socialLinks", method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_VALUE)
	@ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<SocialLinks> findAll() {
		return socialLinksService.findAll();
	}

	@RequestMapping(value = "/socialLinks/{id}", method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_VALUE)
	@ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public SocialLinks findOne(@PathVariable("id") Long id) {
		return socialLinksService.findById(id);
	}

	@RequestMapping(value = "/socialLinks", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_VALUE)
	@ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public SocialLinks create(@RequestBody SocialLinks socialLinks) {
		return socialLinksService.create(socialLinks);
	}

	@RequestMapping(value = "/socialLinks", method = RequestMethod.PUT, produces = MediaType.APPLICATION_JSON_VALUE)
	@ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public SocialLinks update(@RequestBody SocialLinks socialLinks) {
		return socialLinksService.update(socialLinks);
	}

	@RequestMapping(value = "/socialLinks/{id}", method = RequestMethod.DELETE, produces = MediaType.APPLICATION_JSON_VALUE)
	@ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Long id) {
		socialLinksService.delete(id);
	}

}
